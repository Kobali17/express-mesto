{
  "version": 3,
  "sources": [
    "components/Header.js",
    "contexts/CurrentUserContext.js",
    "components/Card.js",
    "components/Main.js",
    "components/Footer.js",
    "components/ImagePopup.js",
    "components/PopupWithForm.js",
    "components/EditProfilePopup.js",
    "components/DelCardPopup.js",
    "components/EditAvatarPopup.js",
    "components/AddPlacePopup.js",
    "utils/Api.js",
    "components/App.js",
    "serviceWorker.js",
    "index.js",
    "images/logo.svg"
  ],
  "names": [
    "Header",
    "className",
    "src",
    "logo",
    "alt",
    "CurrentUserContext",
    "React",
    "createContext",
    "Card",
    "props",
    "currentUser",
    "useContext",
    "isOwn",
    "card",
    "owner",
    "_id",
    "cardDeleteButtonClassName",
    "isLiked",
    "likes",
    "some",
    "i",
    "cardLikeButtonClassName",
    "key",
    "type",
    "onClick",
    "onDel",
    "onImage",
    "link",
    "text",
    "name",
    "onCardLike",
    "length",
    "Main",
    "style",
    "backgroundImage",
    "avatar",
    "onEditAvatar",
    "onEditProfile",
    "about",
    "onAddPlace",
    "cards",
    "map",
    "onCardDelete",
    "Footer",
    "ImagePopup",
    "id",
    "onClose",
    "PopupWithForm",
    "popupId",
    "isOpen",
    "title",
    "formId",
    "onSubmit",
    "method",
    "noValidate",
    "children",
    "buttonText",
    "EditProfilePopup",
    "useEffect",
    "setName",
    "setDescription",
    "useState",
    "description",
    "e",
    "preventDefault",
    "onUpdateUser",
    "required",
    "placeholder",
    "onChange",
    "target",
    "value",
    "minLength",
    "maxLength",
    "DelCardPopup",
    "onDelCard",
    "EditAvatarPopup",
    "avatarRef",
    "useRef",
    "onUpdateAvatar",
    "current",
    "ref",
    "AddPlacePopup",
    "placeRef",
    "linkRef",
    "onAddCard",
    "place",
    "api",
    "options",
    "this",
    "_headers",
    "headers",
    "_baseUrl",
    "baseUrl",
    "_fetch",
    "values",
    "JSON",
    "stringify",
    "cardId",
    "takeCardLike",
    "removeCardLke",
    "url",
    "body",
    "fetch",
    "then",
    "res",
    "ok",
    "json",
    "Promise",
    "reject",
    "status",
    "authorization",
    "App",
    "setUserData",
    "getUserData",
    "catch",
    "err",
    "console",
    "log",
    "isEditAvatarPopupOpen",
    "isEditAvatarClickSet",
    "isEditProfilePopupOpen",
    "isEditProfilePopupOpenSet",
    "isAddPlacePopupOpen",
    "isAddPlacePopupOpenSet",
    "isDelPopupOpen",
    "isDelPopupOpenSet",
    "selectedCard",
    "selectedCardSet",
    "delCard",
    "delCardSet",
    "handleDelClick",
    "closeAllPopups",
    "getInitialCards",
    "setCards",
    "Provider",
    "changeLikeCardStatus",
    "newCard",
    "newCards",
    "c",
    "inputText",
    "userData",
    "patchUserData",
    "patchUserAvatar",
    "userCardData",
    "addUserCard",
    "filter",
    "Boolean",
    "window",
    "location",
    "hostname",
    "match",
    "ReactDOM",
    "render",
    "StrictMode",
    "document",
    "getElementById",
    "navigator",
    "serviceWorker",
    "ready",
    "registration",
    "unregister",
    "error",
    "message",
    "module",
    "exports"
  ],
  "mappings": "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",
  "file": "static/js/main.9a84f17a.chunk.js",
  "sourcesContent": [
    "import logo from \"../images/logo.svg\";\nimport React from \"react\";\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <img className=\"header__logo\" src={logo} alt=\"Логотип Место\"/>\n        </header>)\n}\n\nexport default Header",
    "import React from 'react';\n\nexport const CurrentUserContext = React.createContext();",
    "import React from \"react\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction Card(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n    const isOwn = props.card.owner._id === currentUser._id;\n    const cardDeleteButtonClassName = (\n        `card__del-button ${!isOwn ? 'card__del-button_hidden' : ''}`\n    );\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n    const cardLikeButtonClassName = (\n        `card__like-button ${isLiked ? 'card_liked' : ''}`\n    );\n\n    function handleLikeClick() {\n        props.onCardLike(props.card)\n    }\n\n    function handelDelClick() {\n        props.onDel(props.card)\n    }\n\n\n    return (\n        <div key={props.card._id} className=\"card\">\n            <button type=\"button\" className={cardDeleteButtonClassName} onClick={handelDelClick}/>\n            <img className=\"card__img\" onClick={() => {\n                props.onImage(props.card)\n            }} src={props.card.link} alt={props.card.text}/>\n            <div className=\"card__info\">\n                <h3 className=\"card__text\">{props.card.name}</h3>\n                <div className=\"card__like-container\">\n                    <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}/>\n                    <p className=\"card__like-data\">{props.card.likes.length}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Card",
    "import React from \"react\";\nimport Card from \"./Card\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction Main(props) {\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main className=\"main\">\n            <section className=\"profile\">\n                <div className=\"profile__first\">\n                    <div className=\"profile__avatar\" style={{backgroundImage: `url(${currentUser.avatar})`}}>\n                        <button className=\"profile__avatar-edit-button\" onClick={props.onEditAvatar} type=\"button\"/>\n                    </div>\n                    <div className=\"profile__info\">\n                        <h1 className=\"profile__name\">{currentUser.name}</h1>\n                        <button className=\"profile__edit-button\" onClick={props.onEditProfile} type=\"button\"/>\n                        <p className=\"profile__job\">{currentUser.about}</p>\n                    </div>\n                </div>\n                <button type=\"button\" className=\"profile__add-card-button\" onClick={props.onAddPlace}/>\n            </section>\n            <section className=\"photo-grid\">\n                {props.cards.map((card) => (\n                    <Card key={card._id} card={card} onDel={props.onCardDelete} onImage={props.onImage}\n                          onCardLike={props.onCardLike}/>\n                ))}\n                }\n            </section>\n        </main>\n    )\n}\n\nexport default Main",
    "import React from \"react\";\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__text\">&copy; 2020 Mesto Russia</p>\n        </footer>\n    )\n}\n\nexport default Footer",
    "import React from \"react\";\n\nfunction ImagePopup(props) {\n    return (\n\n        <div className={`popup ${props.card != null ? 'popup_opened' : ''}`}>\n            <div className=\"popup-photo__container\">\n                <button id=\"photo-close\" type=\"button\" className=\"popup-photo__close-button\" onClick={props.onClose}/>\n                <img className=\"popup-photo__img\" src={props.card != null ? props.card.link : ''}/>\n                <p className=\"popup-photo__text\">{props.card != null ? props.card.name : ''}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ImagePopup\n",
    "import React from \"react\";\n\nfunction PopupWithForm(props) {\n\n    return (\n        <div id={props.popupId} className={`popup ${props.isOpen ? 'popup_opened' : ''}`}>\n            <div className=\"popup__container\">\n                <button id=\"name-close\" className=\"popup__close-button\" onClick={props.onClose}/>\n                <div className=\"popup__window\">\n                    <div className=\"popup__window-content\">\n                        <h2 className=\"popup__title\">{props.title}</h2>\n                        <form id={props.formId} onSubmit={props.onSubmit} name=\"profileInfo\" className=\"popup__form\"\n                              method=\"get\" noValidate>\n                            {props.children}\n                            <button type=\"submit\" className=\"popup__save-button\">{props.buttonText}</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default PopupWithForm",
    "import PopupWithForm from \"./PopupWithForm\";\nimport React from \"react\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\n\nfunction EditProfilePopup(props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n\n    const [name, setName] = React.useState(`${currentUser.name}`);\n    const [description, setDescription] = React.useState(`${currentUser.about}`);\n\n\n    function handelSetName(e) {\n        setName(e.target.value);\n    }\n\n    function handelSetDescription(e) {\n        setDescription(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateUser({\n            name,\n            about: description,\n        });\n    }\n\n    return (\n        <PopupWithForm onSubmit={handleSubmit} onClose={props.onClose} isOpen={props.isOpen}\n                       title=\"Редактировать профиль\" buttonText=\"Сохранить\"\n                       popupId=\"edit\" formId=\"profile-form\">\n            <input id=\"name\" required placeholder=\"Имя\" type=\"text\" name=\"name\" onChange={handelSetName}\n                   className=\"popup__input\"\n                   minLength=\"2\" maxLength=\"40\" value={name}/>\n            <span id=\"name-error\" className=\"popup__input_error\"/>\n            <input id=\"job\" required placeholder=\"О себе\" type=\"text\" name=\"job\"\n                   className=\"popup__input\" onChange={handelSetDescription}\n                   minLength=\"2\" value={description} maxLength=\"200\"/>\n            <span id=\"job-error\" className=\"popup__input_error\"/>\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup",
    "import PopupWithForm from \"./PopupWithForm\";\nimport React from \"react\";\n\n\nfunction DelCardPopup(props) {\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onDelCard();\n    }\n\n    return (\n        <PopupWithForm onSubmit={handleSubmit} onClose={props.onClose} isOpen={props.isOpen} title=\"Вы уверены?\"\n                       popupId=\"del-popup\" buttonText=\"Да\">\n        </PopupWithForm>\n    )\n}\n\nexport default DelCardPopup",
    "import PopupWithForm from \"./PopupWithForm\";\nimport React from \"react\";\n\n\nfunction EditAvatarPopup(props) {\n    const avatarRef = React.useRef();\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onUpdateAvatar({\n            avatar: avatarRef.current.value,\n        });\n    }\n\n    return (\n        <PopupWithForm onSubmit={handleSubmit} onClose={props.onClose} isOpen={props.isOpen} title=\"Обновить аватар\"\n                       popupId=\"avatar-popup\" formId=\"photo-form\" buttonText=\"Сохранить\">\n            <input ref={avatarRef} id=\"avatar-link\" required placeholder=\"Ссылка на изображение\" type=\"url\"\n                   name=\"link\"\n                   className=\"popup__input\"/>\n            <span id=\"avatar-link-error\" className=\"popup__input_error\"/>\n        </PopupWithForm>\n    )\n}\n\nexport default EditAvatarPopup",
    "import PopupWithForm from \"./PopupWithForm\";\nimport React from \"react\";\n\nfunction AddPlacePopup(props) {\n\n\n    const placeRef = React.useRef();\n    const linkRef = React.useRef();\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onAddCard({\n            place: placeRef.current.value,\n            link: linkRef.current.value\n        });\n    }\n\n    return (\n        <PopupWithForm onSubmit={handleSubmit} onClose={props.onClose} isOpen={props.isOpen} title=\"Новое место\"\n                       popupId=\"photo-add\"\n                       formId=\"photo-form\">\n            <input ref={placeRef} id=\"place\" required placeholder=\"Название\" type=\"text\" name=\"place\"\n                   className=\"popup__input\"\n                   minLength=\"1\" maxLength=\"30\"/>\n            <span id=\"place-error\" className=\"popup__input_error\"/>\n            <input ref={linkRef} id=\"link\" required placeholder=\"Ссылка на картинку\" type=\"url\" name=\"link\"\n                   className=\"popup__input\"/>\n            <span id=\"link-error\" className=\"popup__input_error\"/>\n            <button type=\"submit\" className=\"popup__save-button\">Создать</button>\n        </PopupWithForm>\n\n    )\n}\n\nexport default AddPlacePopup",
    "class Api {\n    constructor(options) {\n        this._headers = options.headers;\n        this._baseUrl = options.baseUrl;\n    }\n\n    getInitialCards() {\n        return this._fetch('/cards', 'GET')\n    }\n\n    addUserCard(values) {\n        return this._fetch('/cards', 'POST', JSON.stringify({\n            name: values.place,\n            link: values.link\n        }))\n    }\n\n    takeCardLike(cardId) {\n        return this._fetch(`/cards/likes/${cardId}`, 'PUT')\n    }\n\n    removeCardLke(cardId) {\n        return this._fetch(`/cards/likes/${cardId}`, 'DELETE')\n    }\n\n\n    changeLikeCardStatus(cardId, isLiked) {\n        if (isLiked) {\n            return this.takeCardLike(cardId)\n        } else {\n            return this.removeCardLke(cardId)\n        }\n    }\n\n    delCard(cardId) {\n        return this._fetch(`/cards/${cardId}`, 'DELETE')\n    }\n\n    getUserData() {\n        return this._fetch('/users/me', 'GET')\n    }\n\n    patchUserData(values) {\n        return this._fetch('/users/me', 'PATCH', JSON.stringify({\n            name: values.name,\n            about: values.about\n        }))\n\n    }\n\n    patchUserAvatar(values) {\n        return this._fetch('/users/me/avatar', 'PATCH', JSON.stringify({\n            avatar: values.avatar\n        }))\n    }\n\n    _fetch(url, method, body) {\n        return fetch(this._baseUrl + url, {\n            method: method,\n            headers:\n            this._headers,\n            body: body\n        }).then(res => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Ошибка: ${res.status}`);\n        });\n    }\n}\n\nconst api = new Api({\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-15',\n    headers: {\n        authorization: '01a4a2a9-bf87-4e89-95fb-cc046e118ab5',\n        'Content-Type': 'application/json'\n    }\n})\nexport default api",
    "import React from 'react';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport ImagePopup from \"./ImagePopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport DelCardPopup from \"./DelCardPopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport api from \"../utils/Api.js\"\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\"\n\nfunction App() {\n\n    const [currentUser, setUserData] = React.useState({\n        name: '',\n        about: '',\n        avatar: ''\n    });\n    React.useEffect(() => {\n        api.getUserData().then((res) => {\n            setUserData(res)\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, [])\n    const [isEditAvatarPopupOpen, isEditAvatarClickSet] = React.useState(false);\n    const [isEditProfilePopupOpen, isEditProfilePopupOpenSet] = React.useState(false);\n    const [isAddPlacePopupOpen, isAddPlacePopupOpenSet] = React.useState(false);\n    const [isDelPopupOpen, isDelPopupOpenSet] = React.useState(false);\n    const [selectedCard, selectedCardSet] = React.useState(null);\n    const [delCard, delCardSet] = React.useState(null);\n\n    function isPopupOpen() {\n        return isEditAvatarPopupOpen ||\n            isEditProfilePopupOpen ||\n            isAddPlacePopupOpen ||\n            isDelPopupOpen ||\n            selectedCard != null\n    }\n\n    function handleCardClick(card) {\n        selectedCardSet(card)\n    }\n\n    function handleDelClick(card) {\n        delCardSet(card)\n        isDelPopupOpenSet(true)\n    }\n\n    function handleEditAvatarClick() {\n        isEditAvatarClickSet(true)\n    }\n\n    function handleEditProfileClick() {\n        isEditProfilePopupOpenSet(true)\n    }\n\n    function handleAddPlaceClick() {\n        isAddPlacePopupOpenSet(true)\n    }\n\n    function closeAllPopups() {\n        isAddPlacePopupOpenSet(false)\n        isEditAvatarClickSet(false)\n        isEditProfilePopupOpenSet(false)\n        isDelPopupOpenSet(false)\n        selectedCardSet(null)\n        delCardSet(null)\n    }\n\n    function handleUpdateUser(userData) {\n        api.patchUserData(userData).then((res) => {\n            setUserData(res);\n            closeAllPopups()\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n\n    function handleUpdateAvatar(userData) {\n        api.patchUserAvatar(userData).then((res) => {\n            setUserData(res);\n            closeAllPopups()\n        }).catch((err) => {\n            console.log(err);\n        })\n\n    }\n\n    React.useEffect(() => {\n        api.getInitialCards().then((res) => {\n            setCards(res)\n        }).catch((err) => {\n            console.log(err);\n        })\n    }, [])\n\n    const [cards, setCards] = React.useState([]);\n\n\n    function handleCardLike(card) {\n\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n            setCards(newCards);\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    function handleCardDelete() {\n        api.delCard(delCard._id).then(() => {\n            const newCards = cards.filter((c) => c._id !== delCard._id);\n            setCards(newCards);\n            closeAllPopups()\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n\n    function handleAddPlaceSubmit(userCardData) {\n        api.addUserCard(userCardData).then((newCard) => {\n            setCards([newCard, ...cards]);\n            closeAllPopups()\n        }).catch((err) => {\n            console.log(err);\n        })\n    }\n\n    return (\n        <CurrentUserContext.Provider value={currentUser}>\n\n            <Header/>\n\n            <Main cards={cards} onCardLike={handleCardLike} onCardDelete={handleDelClick}\n                  onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick}\n                  onEditAvatar={handleEditAvatarClick} onDel={handleDelClick} onImage={handleCardClick}/>\n\n            <Footer/>\n\n            <EditProfilePopup inputText={currentUser} onUpdateUser={handleUpdateUser} isOpen={isEditProfilePopupOpen}\n                              onClose={closeAllPopups}/>\n\n            <EditAvatarPopup onUpdateAvatar={handleUpdateAvatar} isOpen={isEditAvatarPopupOpen}\n                             onClose={closeAllPopups}/>\n\n            <AddPlacePopup onAddCard={handleAddPlaceSubmit} isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}/>\n\n            <DelCardPopup onDelCard={handleCardDelete} isOpen={isDelPopupOpen} onClose={closeAllPopups}/>\n\n            <ImagePopup onClose={closeAllPopups} card={selectedCard}/>\n\n            <div className={`overlay ${isPopupOpen() ? 'popup_opened' : ''}`}/>\n\n        </CurrentUserContext.Provider>\n    );\n}\n\nexport default App;\n",
    "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'},\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n",
    "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n",
    "module.exports = __webpack_public_path__ + \"static/media/logo.a9a23044.svg\";"
  ],
  "sourceRoot": ""
}